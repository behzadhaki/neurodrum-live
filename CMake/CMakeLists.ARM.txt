cmake_minimum_required(VERSION 3.19)
project(MyPlugin VERSION 0.1.0)

# ==============================================================================
# C++ Standard
# ==============================================================================
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# ==============================================================================
# Plugin Target Setup
# ==============================================================================
target_compile_definitions(${BaseTargetName}
    PUBLIC
    JUCE_WEB_BROWSER=0
    JUCE_USE_CURL=0
    JUCE_VST3_CAN_REPLACE_VST2=0
)

# ==============================================================================
# Include CPM and Fetch ONNX Runtime
# ==============================================================================

CPMAddPackage(
  NAME onnxruntime
  GITHUB_REPOSITORY microsoft/onnxruntime
  GIT_TAG v1.18.0
  OPTIONS
    "BUILD_SHARED_LIBS ON"
    "ONNXRUNTIME_ENABLE_PYTHON OFF"
    "ONNXRUNTIME_BUILD_UNIT_TESTS OFF"
    "ONNXRUNTIME_ENABLE_CUDA OFF"
    "ONNXRUNTIME_ENABLE_TRAINING OFF"
    "ONNXRUNTIME_ENABLE_TENSORRT OFF"
    "ONNXRUNTIME_ENABLE_OPENVINO OFF"
    "ONNXRUNTIME_ENABLE_DNNL OFF"
    "ONNXRUNTIME_ENABLE_MKL_DNN OFF"
    "CMAKE_POSITION_INDEPENDENT_CODE ON"
)

# ==============================================================================
# Add ONNX Include Path and Link to Target
# ==============================================================================
target_include_directories(${BaseTargetName} PRIVATE
    ${onnxruntime_SOURCE_DIR}/include
    ${onnxruntime_SOURCE_DIR}/include/onnxruntime/core/session
)


# Manually link ONNX .dylib later via add_custom_command
target_link_libraries(${BaseTargetName} PRIVATE
    shared_plugin_helpers
    juce_recommended_config_flags
    juce_recommended_lto_flags
    juce_recommended_warning_flags
    juce::juce_osc
    -Wl,-rpath,@loader_path/../Resources
)

# ==============================================================================
# Source Files
# ==============================================================================
target_sources(${BaseTargetName} PRIVATE
    ../shared_plugin_helpers/shared_plugin_helpers.cpp
    ../Source/PluginProcessor.cpp
    ../Source/PluginEditor.cpp
    ../Source/InferenceThreadJob.cpp
    ../Source/AudioBufferSampler.cpp
)

# ==============================================================================
# Embed ONNX Model into Plugin Bundle
# ==============================================================================
set(MODEL_SRC_PATH "${CMAKE_SOURCE_DIR}/models/log_kicks_full.onnx")
set(MODEL_DEST_DIR "${CMAKE_BINARY_DIR}/PluginCode/${BaseTargetName}_artefacts/${CMAKE_BUILD_TYPE}/VST3/${BaseTargetName}.vst3/Contents/Resources")

add_custom_command(TARGET ${BaseTargetName} POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E make_directory "${MODEL_DEST_DIR}"
    COMMAND ${CMAKE_COMMAND} -E copy "${MODEL_SRC_PATH}" "${MODEL_DEST_DIR}/log_kicks_full.onnx"
)

# Add preprocessor define to access model path from code (optional)
add_definitions(-DDEFAULT_MODEL_PATH="@rpath/log_kicks_full.onnx")

# ==============================================================================
# Copy ONNX Runtime dylib into Plugin Bundle
# ==============================================================================
# This assumes the ONNX library is built to onnxruntime_BINARY_DIR/Release or Debug
set(ONNX_LIB_DIR "${onnxruntime_BINARY_DIR}/${CMAKE_BUILD_TYPE}")
set(ONNX_LIB_FILE "${ONNX_LIB_DIR}/libonnxruntime.dylib")

add_custom_command(TARGET ${BaseTargetName} POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_if_different
        "${ONNX_LIB_FILE}"
        "${MODEL_DEST_DIR}/libonnxruntime.dylib"
)

# Fix install name (macOS only)
add_custom_command(TARGET ${BaseTargetName} POST_BUILD
    COMMAND install_name_tool -id @rpath/libonnxruntime.dylib "${MODEL_DEST_DIR}/libonnxruntime.dylib"
)

# ==============================================================================
# Copy Plugin to Local VST3 Folder
# ==============================================================================
add_custom_command(TARGET ${BaseTargetName} POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_directory
        "${CMAKE_BINARY_DIR}/PluginCode/${BaseTargetName}_artefacts/${CMAKE_BUILD_TYPE}/VST3/${BaseTargetName}.vst3"
        "$ENV{HOME}/Library/Audio/Plug-Ins/VST3/${BaseTargetName}.vst3"
)

# ==============================================================================
# Final Info
# ==============================================================================
add_definitions(-DAPP_NAME=${BaseTargetName})
message(STATUS "ONNX model bundled at: ${MODEL_DEST_DIR}/log_kicks_full.onnx")
message(STATUS "ONNX dylib bundled at: ${MODEL_DEST_DIR}/libonnxruntime.dylib")
